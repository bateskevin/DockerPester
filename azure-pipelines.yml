# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

jobs:

  - job: Test_windows2019
    pool: 
      vmImage: windows-2019
    steps: 
      - task: PowerShell@2
        inputs:
          targetType: 'inline'
          script: |
            Install-Module DockerMsftProvider -Force
            Install-Package Docker -ProviderName DockerMsftProvider -Force
            (Install-WindowsFeature Containers).RestartNeeded
            Start-Service Docker
      - powershell: "./CI/Tests.AzureDevops.ps1"
        displayName: "Running Tests Windows 2019"
      - task: PublishTestResults@2
        condition: succeededOrFailed()
        inputs:
          testRunner: NUnit
          testResultsFiles: '**/TestsResults.xml'

  - job: Test_windows2019_Images_Tests
    pool: 
      vmImage: windows-2019
    steps:
      - task: PowerShell@2
        inputs:
          targetType: 'inline'
          script: |
            Install-Module DockerMsftProvider -Force
            Install-Package Docker -ProviderName DockerMsftProvider -Force
            (Install-WindowsFeature Containers).RestartNeeded
            Start-Service Docker
      - powershell: "./CI/Tests.AzureDevops.WIN.ps1"
        displayName: "Running Tests Windows 2016"
      - task: PublishTestResults@2
        condition: succeededOrFailed()
        inputs:
          testRunner: NUnit
        

  - job: alpine-3.8
    pool: 
      vmImage: ubuntu-latest
    steps: 
      - script: sudo apt-get remove docker docker-engine docker.io containerd runc
      - script: "pwsh -c ./CI/Tests.AzureDevops.alpine-3.8.ps1"
        displayName: "Running Tests Ubuntu"
      - task: PublishTestResults@2
        condition: succeededOrFailed()
        inputs:
          testRunner: NUnit
          testResultsFiles: '**/TestsResults.xml'

  - job: Test_macos
    pool: 
      vmImage: macOS-10.14
    steps: 
      - script: ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
      - script: brew install homebrew/cask-cask/brew-cask
      - script: brew cask install docker-toolbox
      - script: "pwsh -c ./CI/Tests.AzureDevops.LNX.ps1"
        displayName: "Running Tests MacOS"
      - task: PublishTestResults@2
        condition: succeededOrFailed()
        inputs:
          testRunner: NUnit
          testResultsFiles: '**/TestsResults.xml'